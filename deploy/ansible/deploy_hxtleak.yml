---
#
# Ansible playbook for deploying HEXITEC leak detector control system to a BeagleBone Black
#

- hosts: hxtleak_bbb
  remote_user: root

  tasks:

    - name: Check if reboot required
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_md5: no
      register: reboot_required
      changed_when: false

    - name: print message if reboot required
      ansible.builtin.debug:
        msg: "Reboot is required"
      when: reboot_required.stat.exists

    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}"
      when: hostname is defined
      tags: system

    - name: Set timezone
      ansible.builtin.file:
        src: /usr/share/zoneinfo/{{ timezone }}
        dest: /etc/localtime
        state: link
      when: timezone is defined
      notify: Reconfigure timezone data
      tags: system

    - name: Disabled unwanted services
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      with_items:
        - wpa_supplicant
        - bonescript-autorun
        - nginx
      tags: system

    - name: Suppress SSHD login banner
      ansible.builtin.replace:
        path: /etc/ssh/sshd_config
        regexp: '^(Banner.*)'
        replace: '#\1'
      notify: Restart sshd
      tags: system

    - name: Suppress SSHD motd
      ansible.builtin.replace:
        path: /etc/pam.d/sshd
        regexp: '^(session\s+optional\s+pam_motd.so.*)'
        replace: '#\1'
      notify: Restart sshd
      tags: system

    - name: Create hexitec group
      ansible.builtin.group:
        name: hexitec
        gid: 1001
        state: present
      tags: user

    - name: Create hexiuser account
      ansible.builtin.user:
        name: hexiuser
        uid: 1001
        group: hexitec
        password: $6$9Cc9hWUtHGRnOv1b$hNAHEA./g6aVbIbvyJKKaaDGN.oDOsnBO/OBM5o5AGjr/8KQE1uhpTcQapC1u.fuRJqORUrg3b/tB9gkuA00h.
        update_password: on_create
        shell: /bin/bash
      tags: user

    - name: Add hexiuser account to required system groups
      ansible.builtin.user:
        name: hexiuser
        append: yes
        groups:
          - adm
          - kmem
          - dialout
          - cdrom
          - floppy
          - audio
          - dip
          - video
          - plugdev
          - users
          - systemd-journal
          - bluetooth
          - netdev
          - i2c
          - gpio
          - pwm
          - eqep
          - remoteproc
          - admin
          - spi
          - iio
          - docker
          - tisdk
          - weston-launch
          - xenomai
      tags: user

    - name: Remove default debian account
      ansible.builtin.user:
        name: debian
        state: absent
        remove: yes
      tags: system

    - name: Install python 3 packages
      ansible.builtin.package:
        state: present
        name:
          - python3
          - python3-pip
          - python3-virtualenv
      tags: [package,python]

    - name: Create hexitex software directory
      ansible.builtin.file:
        path: "{{ hxt_sw_dir }}"
        group: hexitec
        mode: u=rwx,g=rwx,o=rx
        state: directory
      tags: app

    - name: Create install directory for application
      ansible.builtin.file:
        path: "{{ hxt_install_dir }}"
        group: hexitec
        mode: u=rwx,g=rwx,o=rx
        state: directory
      tags: app

    - name: Clone hxtleak repo from Github
      ansible.builtin.git:
        repo: "{{ hxtleak_repo_url }}"
        dest: "{{ hxt_install_dir }}/aegir"
        accept_hostkey: yes
      become: yes
      become_user: hexiuser
      tags: app

    - name: Install hxtleak package into virtualenv
      ansible.builtin.pip:
        name: "git+{{ hxtleak_repo_url }}#egg=aegir&subdirectory=control"
        virtualenv: "{{ hxt_install_dir}}"
        editable: yes
      become: yes
      become_user: hexiuser
      tags: app

    - name: Install configuration file for hxtleak odin-control server
      ansible.builtin.template:
        src: templates/hxtleak.cfg.j2
        dest: "{{ hxt_install_dir }}/config/hxtleak.cfg"
      notify: Restart odin-hxtleak service
      tags: [app,service]

    - name: Install systemd service unit for hxtleak odin-control server
      ansible.builtin.template:
        src: templates/odin-hxtleak.service.j2
        dest: /etc/systemd/system/odin-hxtleak.service
      notify: Restart odin-hxtleak service
      tags: [app,service]

    - name: Enable hxtleak service in systemd
      ansible.builtin.service:
        name: odin-hxtleak.service
        enabled: true
      notify: Restart odin-hxtleak service
      tags: [app,service]

    - name: Create temptfs entries in fstab
      ansible.posix.mount:
        src: tmpfs
        path: "{{ item.path }}"
        fstype: tmpfs
        opts: "defaults,noatime,nosuid,mode={{ item.mode }},size={{ item.size }}"
        state: present
      loop:
        - { path: '/var/log', mode: '1777', size: '128M' }
        - { path: '/var/lib/dhcp', mode: '1777', size: '1M' }
        - { path: '/var/lib/sudo', mode: '0700', size: '1M' }
        - { path: '/var/lib/systemd', mode: '0755', size: '1M' }
        - { path: '/var/lib/logrotate', mode: '0755', size: '1M' }
        - { path: '/var/tmp', mode: '1777', size: '1M' }
        - { path: '/tmp', mode: '1777', size: '32M' }
      tags: fstab

    - name : Set rootfs read-only in fstab
      ansible.posix.mount:
        src: "{{ ansible_mounts|json_query('[?mount == `/`].device')|first }}"
        path: /
        fstype: "{{ ansible_mounts|json_query('[?mount == `/`].fstype')|first }}"
        opts: "ro,noatime,errors=remount-ro"
        state: present
      tags: fstab

  handlers:

    - name: Reconfigure timezone data
      ansible.builtin.command:
        cmd: dpkg-reconfigure -f noninteractive tzdata

    - name: Restart sshd
      ansible.builtin.service:
        name: sshd.service
        state: restarted

    - name: Restart odin-hxtleak service
      ansible.builtin.service:
        name: odin-hxtleak.service
        daemon_reload: true
        state: restarted
